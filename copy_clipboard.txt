import streamlit as st

# Example chatbot response (You would replace this with your chatbot's actual response)
latest_response = "This is the latest response from the bot."

# Display the latest response
st.write(f"Bot: {latest_response}")

# Add a button to copy the response to the clipboard
copy_button = st.button("Copy to clipboard")

# JavaScript code to copy the latest response to clipboard
if copy_button:
    st.write("""
        <script>
        const response = `"{}"`;
        navigator.clipboard.writeText(response).then(() => {
            alert('Copied to clipboard!');
        }).catch(err => {
            alert('Failed to copy text: ' + err);
        });
        </script>
    """.format(latest_response), unsafe_allow_html=True)
-----------------


import streamlit as st

# Example chatbot response (replace with your chatbot's actual response)
latest_response = "This is the latest response from the bot."

# Display the latest response
st.write(f"Bot: {latest_response}")

# Add a button to copy the response to the clipboard
copy_button = st.button("Copy to clipboard", key="copy_button")

# JavaScript code to copy the latest response to clipboard
if copy_button:
    st.markdown(f"""
        <script>
        const response = `{latest_response}`;
        navigator.clipboard.writeText(response).then(() => {{
            alert('Copied to clipboard!');
        }}).catch(err => {{
            console.error('Failed to copy text: ', err);
        }});
        </script>
    """, unsafe_allow_html=True)
--------------------

import streamlit as st

# Example chatbot response stored in session state (replace with your actual chatbot response logic)
if 'answer' not in st.session_state:
    st.session_state['answer'] = "This is the latest response from the bot."

# Display the latest response
st.write(f"Bot: {st.session_state['answer']}")

# Add a button to copy the response to the clipboard
copy_button = st.button("Copy to clipboard", key="copy_button")

# Inject JavaScript for clipboard copying without triggering a re-run
if copy_button:
    # This JavaScript will run without affecting Streamlit's execution
    st.markdown(f"""
        <script>
        const response = `{st.session_state['answer']}`;
        navigator.clipboard.writeText(response).then(() => {{
            alert('Copied to clipboard!');
        }}).catch(err => {{
            console.error('Failed to copy text: ', err);
        }});
        </script>
    """, unsafe_allow_html=True)
---------------
import streamlit as st

# Example chatbot response stored in session state (replace with your actual chatbot response logic)
if 'answer' not in st.session_state:
    st.session_state['answer'] = "This is the latest response from the bot."

# Display the latest response
st.write(f"Bot: {st.session_state['answer']}")

# Create a hidden text input field to hold the text you want to copy
st.text_input("Hidden text field", st.session_state['answer'], key="copy_text", type="default")

# Add a button to trigger the clipboard copy
copy_button = st.button("Copy to clipboard", key="copy_button")

# Inject JavaScript to copy text from the hidden text field to clipboard
if copy_button:
    st.markdown(f"""
        <script>
        var copyText = document.getElementById('copy_text');
        navigator.clipboard.writeText(copyText.value).then(() => {{
            alert('Copied to clipboard!');
        }}).catch(err => {{
            console.error('Failed to copy text: ', err);
        }});
        </script>
    """, unsafe_allow_html=True)

-------------------------------------
import streamlit as st
import streamlit.components.v1 as components

# Example chatbot response stored in session state (replace with your actual chatbot response logic)
if 'answer' not in st.session_state:
    st.session_state['answer'] = "This is the latest response from the bot."

# Display the latest response
st.write(f"Bot: {st.session_state['answer']}")

# Button to trigger the copy action
if st.button("Copy to clipboard"):
    # Inject custom HTML and JavaScript directly using Streamlit's components.html
    components.html(f"""
        <script>
        function copyToClipboard(text) {{
            const textarea = document.createElement('textarea');
            textarea.value = text;
            document.body.appendChild(textarea);
            textarea.select();
            document.execCommand('copy');
            document.body.removeChild(textarea);
            alert('Copied to clipboard!');
        }}
        copyToClipboard(`{st.session_state['answer']}`);
        </script>
    """, height=0)


Hello there! 

Hello there! How can I assist you today?
---------------------------------
import streamlit as st

# Example chatbot response stored in session state (replace with your actual chatbot response logic)
if 'answer' not in st.session_state:
    st.session_state['answer'] = "This is the latest response from the bot."

# Display the latest response
st.write(f"Bot: {st.session_state['answer']}")

# Use st.markdown to inject HTML and JavaScript for clipboard functionality
st.markdown(f"""
    <script>
    function copyToClipboard() {{
        const textToCopy = `{st.session_state['answer']}`;
        const textarea = document.createElement('textarea');
        textarea.value = textToCopy;
        document.body.appendChild(textarea);
        textarea.select();
        document.execCommand('copy');
        document.body.removeChild(textarea);
        alert('Copied to clipboard!');
    }}
    </script>
    <button onclick="copyToClipboard()">Copy to clipboard</button>
""", unsafe_allow_html=True)
---------------

import streamlit as st

# Example chatbot response stored in session state (replace with your actual chatbot response logic)
if 'answer' not in st.session_state:
    st.session_state['answer'] = "This is the latest response from the bot."

# Display the latest response
st.write(f"Bot: {st.session_state['answer']}")

# Inject the JavaScript code and create a button to copy to clipboard
st.markdown(f"""
    <script>
    function copyToClipboard() {{
        var textToCopy = `{st.session_state['answer']}`;
        var tempTextArea = document.createElement("textarea");
        tempTextArea.value = textToCopy;
        document.body.appendChild(tempTextArea);
        tempTextArea.select();
        document.execCommand("copy");
        document.body.removeChild(tempTextArea);
        alert("Copied to clipboard!");
    }}
    </script>
    <button onclick="copyToClipboard()">Copy to clipboard</button>
""", unsafe_allow_html=True)

-------------------------------
import streamlit as st

# Content to copy
text_to_copy = "im pooki"

# Display the content
st.write("Text to copy:")
# st.code(text_to_copy, language="text")

# Button to copy to clipboard using HTML and JS
copy_button_html = f"""
    <button onclick="navigator.clipboard.writeText('{text_to_copy}')">
        Copy to clipboard
    </button>
"""

# Display the HTML in Streamlit
st.components.v1.html(copy_button_html)
---------------------
